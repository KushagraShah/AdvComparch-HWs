-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity kernel5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (31 downto 0);
    a_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    b_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    b_ce0 : OUT STD_LOGIC;
    b_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of kernel5 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "kernel5,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.717000,HLS_SYN_LAT=531,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=1499,HLS_SYN_LUT=1008,HLS_VERSION=2019_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv11_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_0_reg_200 : STD_LOGIC_VECTOR (3 downto 0);
    signal i1_0_reg_211 : STD_LOGIC_VECTOR (10 downto 0);
    signal sum_7_2_6_reg_222 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_reg_232 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_6_1_reg_243 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_5_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_4_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_3_reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_reg_287 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_1_reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln8_reg_779 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_8_reg_857 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_load_reg_861 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_343 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal tmp_8_reg_857_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_load_reg_861_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln12_1_fu_349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln12_1_reg_768 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln12_3_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_3_reg_773 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_369_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal xor_ln11_fu_385_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln11_reg_798 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln11_reg_798_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln11_reg_798_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln11_reg_798_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln11_reg_798_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln11_reg_798_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln11_reg_798_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal sum_7_1_load_reg_802 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal sum_7_2_load_reg_807 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_3_load_reg_812 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_4_load_reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_5_load_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_6_load_reg_827 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_7_load_reg_832 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_8_load_reg_837 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln12_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_reg_842 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_1_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_1_reg_847 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12_2_reg_852 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal tmp_8_fu_545_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_857_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_857_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_857_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_857_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_load_load_fu_553_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_load_reg_861_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_load_reg_861_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_load_reg_861_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_load_reg_861_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_2_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln27_2_reg_875_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_2_reg_875_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_2_reg_875_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_2_reg_875_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_2_reg_875_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_562_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln27_fu_626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_885 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_1_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_1_reg_890 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter4_state6 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_predicate_tran16to18_state11 : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter5_state16 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_sum_2_phi_fu_291_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln11_fu_379_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln26_fu_556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_7_1_fu_88 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_1_load : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_2_fu_92 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_2_load : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_3_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_3_load : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_4_fu_100 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_4_load : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_5_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_5_load : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_6_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_6_load : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_7_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_7_load : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_7_8_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sum_7_8_load : STD_LOGIC_VECTOR (31 downto 0);
    signal flag_0_2_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_2_fu_128 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_2_1_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_flag_3_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_3_fu_132 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_flag_4_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_4_fu_136 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_flag_5_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_5_fu_140 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_flag_6_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_6_fu_144 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_flag_7_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_7_fu_148 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_flag_7_load : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_313_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_318_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln12_fu_353_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln10_fu_375_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal bitcast_ln12_fu_455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_459_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln12_1_fu_469_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln12_fu_485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln12_1_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln12_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln27_fu_608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_612_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln27_fu_622_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln27_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_1_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln27_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp1_stage0_00001 : BOOLEAN;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component kernel5_fadd_32nsbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component kernel5_fcmp_32nscud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    kernel5_fadd_32nsbkb_U1 : component kernel5_fadd_32nsbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_333,
        din1 => reg_338,
        ce => ap_const_logic_1,
        dout => grp_fu_309_p2);

    kernel5_fcmp_32nscud_U2 : component kernel5_fcmp_32nscud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_313_p0,
        din1 => bound,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_313_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_fu_363_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter4_state6)) then 
                        ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_predicate_tran16to18_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter5_state16)))) then 
                    ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter5_state16))) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter4;
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    flag_2_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                flag_2_fu_128 <= flag_2_1_fu_652_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter6_reg = ap_const_lv3_2))) then 
                flag_2_fu_128 <= flag_0_2_fu_499_p2;
            end if; 
        end if;
    end process;

    flag_3_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter4_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
                flag_3_fu_132 <= ap_sig_allocacmp_flag_3_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter6_reg = ap_const_lv3_3))) then 
                flag_3_fu_132 <= flag_0_2_fu_499_p2;
            end if; 
        end if;
    end process;

    flag_4_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter3_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
                flag_4_fu_136 <= ap_sig_allocacmp_flag_4_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter6_reg = ap_const_lv3_4))) then 
                flag_4_fu_136 <= flag_0_2_fu_499_p2;
            end if; 
        end if;
    end process;

    flag_5_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter2_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                flag_5_fu_140 <= ap_sig_allocacmp_flag_5_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter6_reg = ap_const_lv3_5))) then 
                flag_5_fu_140 <= flag_0_2_fu_499_p2;
            end if; 
        end if;
    end process;

    flag_6_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter1_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
                flag_6_fu_144 <= ap_sig_allocacmp_flag_6_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter6_reg = ap_const_lv3_6))) then 
                flag_6_fu_144 <= flag_0_2_fu_499_p2;
            end if; 
        end if;
    end process;

    flag_7_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861 = ap_const_lv1_0) and (tmp_8_reg_857 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                flag_7_fu_148 <= ap_sig_allocacmp_flag_7_1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter6_reg = ap_const_lv3_7))) then 
                flag_7_fu_148 <= flag_0_2_fu_499_p2;
            end if; 
        end if;
    end process;

    i1_0_reg_211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i1_0_reg_211 <= ap_const_lv11_8;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_load_fu_553_p1 = ap_const_lv1_0) and (tmp_8_fu_545_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i1_0_reg_211 <= i_fu_562_p2;
            end if; 
        end if;
    end process;

    i_0_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln8_fu_363_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_0_reg_200 <= i_1_fu_369_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_200 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    sum_1_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_1_reg_298 <= sum_7_1_load_reg_802;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_1_reg_298 <= reg_343;
            end if; 
        end if;
    end process;

    sum_2_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_2_reg_287 <= sum_7_2_load_reg_807;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_2_reg_287 <= sum_1_reg_298;
            end if; 
        end if;
    end process;

    sum_3_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_3_reg_276 <= sum_7_3_load_reg_812;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_3_reg_276 <= sum_2_reg_287;
            end if; 
        end if;
    end process;

    sum_4_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_4_reg_265 <= sum_7_4_load_reg_817;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_4_reg_265 <= sum_3_reg_276;
            end if; 
        end if;
    end process;

    sum_5_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_5_reg_254 <= sum_7_5_load_reg_822;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_5_reg_254 <= sum_4_reg_265;
            end if; 
        end if;
    end process;

    sum_6_1_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_6_1_reg_243 <= sum_7_6_load_reg_827;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_6_1_reg_243 <= sum_5_reg_254;
            end if; 
        end if;
    end process;

    sum_7_2_6_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_7_2_6_reg_222 <= sum_7_8_load_reg_837;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_7_2_6_reg_222 <= sum_7_reg_232;
            end if; 
        end if;
    end process;

    sum_7_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                sum_7_reg_232 <= sum_7_7_load_reg_832;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
                sum_7_reg_232 <= sum_6_1_reg_243;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                bitcast_ln12_1_reg_768 <= bitcast_ln12_1_fu_349_p1;
                icmp_ln12_3_reg_773 <= icmp_ln12_3_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_8_fu_545_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                flag_7_load_reg_861 <= ap_sig_allocacmp_flag_7_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                flag_7_load_reg_861_pp1_iter1_reg <= flag_7_load_reg_861;
                icmp_ln27_2_reg_875_pp1_iter1_reg <= icmp_ln27_2_reg_875;
                tmp_8_reg_857 <= i1_0_reg_211(10 downto 10);
                tmp_8_reg_857_pp1_iter1_reg <= tmp_8_reg_857;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                flag_7_load_reg_861_pp1_iter2_reg <= flag_7_load_reg_861_pp1_iter1_reg;
                flag_7_load_reg_861_pp1_iter3_reg <= flag_7_load_reg_861_pp1_iter2_reg;
                flag_7_load_reg_861_pp1_iter4_reg <= flag_7_load_reg_861_pp1_iter3_reg;
                flag_7_load_reg_861_pp1_iter5_reg <= flag_7_load_reg_861_pp1_iter4_reg;
                icmp_ln27_2_reg_875_pp1_iter2_reg <= icmp_ln27_2_reg_875_pp1_iter1_reg;
                icmp_ln27_2_reg_875_pp1_iter3_reg <= icmp_ln27_2_reg_875_pp1_iter2_reg;
                icmp_ln27_2_reg_875_pp1_iter4_reg <= icmp_ln27_2_reg_875_pp1_iter3_reg;
                icmp_ln27_2_reg_875_pp1_iter5_reg <= icmp_ln27_2_reg_875_pp1_iter4_reg;
                tmp_8_reg_857_pp1_iter2_reg <= tmp_8_reg_857_pp1_iter1_reg;
                tmp_8_reg_857_pp1_iter3_reg <= tmp_8_reg_857_pp1_iter2_reg;
                tmp_8_reg_857_pp1_iter4_reg <= tmp_8_reg_857_pp1_iter3_reg;
                tmp_8_reg_857_pp1_iter5_reg <= tmp_8_reg_857_pp1_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln12_1_reg_847 <= icmp_ln12_1_fu_479_p2;
                icmp_ln12_reg_842 <= icmp_ln12_fu_473_p2;
                xor_ln11_reg_798_pp0_iter2_reg <= xor_ln11_reg_798_pp0_iter1_reg;
                xor_ln11_reg_798_pp0_iter3_reg <= xor_ln11_reg_798_pp0_iter2_reg;
                xor_ln11_reg_798_pp0_iter4_reg <= xor_ln11_reg_798_pp0_iter3_reg;
                xor_ln11_reg_798_pp0_iter5_reg <= xor_ln11_reg_798_pp0_iter4_reg;
                xor_ln11_reg_798_pp0_iter6_reg <= xor_ln11_reg_798_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                icmp_ln12_2_reg_852 <= grp_fu_327_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter4_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter4_reg = ap_const_lv1_0))) then
                icmp_ln27_1_reg_890 <= icmp_ln27_1_fu_632_p2;
                icmp_ln27_reg_885 <= icmp_ln27_fu_626_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_load_fu_553_p1 = ap_const_lv1_0) and (tmp_8_fu_545_p3 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln27_2_reg_875 <= grp_fu_327_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln8_reg_779 <= icmp_ln8_fu_363_p2;
                xor_ln11_reg_798_pp0_iter1_reg <= xor_ln11_reg_798;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861 = ap_const_lv1_0) and (tmp_8_reg_857 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln8_reg_779 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_333 <= a_q0;
                reg_338 <= b_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (flag_7_load_reg_861_pp1_iter4_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then
                reg_343 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_0))) then
                sum_7_1_fu_88 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                sum_7_1_load_reg_802 <= ap_sig_allocacmp_sum_7_1_load;
                sum_7_2_load_reg_807 <= ap_sig_allocacmp_sum_7_2_load;
                sum_7_3_load_reg_812 <= ap_sig_allocacmp_sum_7_3_load;
                sum_7_4_load_reg_817 <= ap_sig_allocacmp_sum_7_4_load;
                sum_7_5_load_reg_822 <= ap_sig_allocacmp_sum_7_5_load;
                sum_7_6_load_reg_827 <= ap_sig_allocacmp_sum_7_6_load;
                sum_7_7_load_reg_832 <= ap_sig_allocacmp_sum_7_7_load;
                sum_7_8_load_reg_837 <= ap_sig_allocacmp_sum_7_8_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_1))) then
                sum_7_2_fu_92 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_2))) then
                sum_7_3_fu_96 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_3))) then
                sum_7_4_fu_100 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_4))) then
                sum_7_5_fu_104 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_5))) then
                sum_7_6_fu_108 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_6))) then
                sum_7_7_fu_112 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_7))) then
                sum_7_8_fu_116 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln8_fu_363_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                xor_ln11_reg_798 <= xor_ln11_fu_385_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp1_iter5, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter7, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln11_fu_379_p1, ap_block_pp0_stage0, zext_ln26_fu_556_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            a_address0 <= zext_ln26_fu_556_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            a_address0 <= zext_ln11_fu_379_p1(10 - 1 downto 0);
        else 
            a_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    and_ln12_fu_493_p2 <= (or_ln12_fu_485_p2 and or_ln12_1_fu_489_p2);
    and_ln27_fu_646_p2 <= (or_ln27_fu_638_p2 and or_ln27_1_fu_642_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(2);
    ap_CS_fsm_state18 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter4_state6_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            ap_condition_pp0_exit_iter4_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter4_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter5_state16_assign_proc : process(ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter5_state16 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter5_state16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_sum_2_phi_fu_291_p4_assign_proc : process(sum_2_reg_287, sum_1_reg_298, tmp_8_reg_857_pp1_iter5_reg, flag_7_load_reg_861_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0)
    begin
        if (((flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_sum_2_phi_fu_291_p4 <= sum_1_reg_298;
        else 
            ap_phi_mux_sum_2_phi_fu_291_p4 <= sum_2_reg_287;
        end if; 
    end process;


    ap_predicate_tran16to18_state11_assign_proc : process(tmp_8_fu_545_p3, ap_sig_allocacmp_flag_7_load)
    begin
                ap_predicate_tran16to18_state11 <= ((ap_sig_allocacmp_flag_7_load = ap_const_lv1_1) or (tmp_8_fu_545_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= sum_7_2_6_reg_222;

    ap_sig_allocacmp_flag_3_1_assign_proc : process(tmp_8_reg_857_pp1_iter5_reg, flag_7_load_reg_861_pp1_iter5_reg, ap_enable_reg_pp1_iter6, ap_block_pp1_stage0, flag_2_fu_128, flag_2_1_fu_652_p2)
    begin
        if (((flag_7_load_reg_861_pp1_iter5_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_sig_allocacmp_flag_3_1 <= flag_2_1_fu_652_p2;
        else 
            ap_sig_allocacmp_flag_3_1 <= flag_2_fu_128;
        end if; 
    end process;


    ap_sig_allocacmp_flag_4_1_assign_proc : process(ap_enable_reg_pp1_iter5, tmp_8_reg_857_pp1_iter4_reg, flag_7_load_reg_861_pp1_iter4_reg, ap_block_pp1_stage0, ap_sig_allocacmp_flag_3_1, flag_3_fu_132)
    begin
        if (((flag_7_load_reg_861_pp1_iter4_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            ap_sig_allocacmp_flag_4_1 <= ap_sig_allocacmp_flag_3_1;
        else 
            ap_sig_allocacmp_flag_4_1 <= flag_3_fu_132;
        end if; 
    end process;


    ap_sig_allocacmp_flag_5_1_assign_proc : process(tmp_8_reg_857_pp1_iter3_reg, flag_7_load_reg_861_pp1_iter3_reg, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0, ap_sig_allocacmp_flag_4_1, flag_4_fu_136)
    begin
        if (((flag_7_load_reg_861_pp1_iter3_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_sig_allocacmp_flag_5_1 <= ap_sig_allocacmp_flag_4_1;
        else 
            ap_sig_allocacmp_flag_5_1 <= flag_4_fu_136;
        end if; 
    end process;


    ap_sig_allocacmp_flag_6_1_assign_proc : process(tmp_8_reg_857_pp1_iter2_reg, flag_7_load_reg_861_pp1_iter2_reg, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, ap_sig_allocacmp_flag_5_1, flag_5_fu_140)
    begin
        if (((flag_7_load_reg_861_pp1_iter2_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_flag_6_1 <= ap_sig_allocacmp_flag_5_1;
        else 
            ap_sig_allocacmp_flag_6_1 <= flag_5_fu_140;
        end if; 
    end process;


    ap_sig_allocacmp_flag_7_1_assign_proc : process(tmp_8_reg_857_pp1_iter1_reg, flag_7_load_reg_861_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, ap_sig_allocacmp_flag_6_1, flag_6_fu_144)
    begin
        if (((flag_7_load_reg_861_pp1_iter1_reg = ap_const_lv1_0) and (tmp_8_reg_857_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_flag_7_1 <= ap_sig_allocacmp_flag_6_1;
        else 
            ap_sig_allocacmp_flag_7_1 <= flag_6_fu_144;
        end if; 
    end process;


    ap_sig_allocacmp_flag_7_load_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_8_reg_857, flag_7_load_reg_861, ap_block_pp1_stage0, ap_sig_allocacmp_flag_7_1, flag_7_fu_148)
    begin
        if (((flag_7_load_reg_861 = ap_const_lv1_0) and (tmp_8_reg_857 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_sig_allocacmp_flag_7_load <= ap_sig_allocacmp_flag_7_1;
        else 
            ap_sig_allocacmp_flag_7_load <= flag_7_fu_148;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_1_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_1_fu_88)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_0))) then 
            ap_sig_allocacmp_sum_7_1_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_1_load <= sum_7_1_fu_88;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_2_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_2_fu_92)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_1))) then 
            ap_sig_allocacmp_sum_7_2_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_2_load <= sum_7_2_fu_92;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_3_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_3_fu_96)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_2))) then 
            ap_sig_allocacmp_sum_7_3_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_3_load <= sum_7_3_fu_96;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_4_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_4_fu_100)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_3))) then 
            ap_sig_allocacmp_sum_7_4_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_4_load <= sum_7_4_fu_100;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_5_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_5_fu_104)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_4))) then 
            ap_sig_allocacmp_sum_7_5_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_5_load <= sum_7_5_fu_104;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_6_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_6_fu_108)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_5))) then 
            ap_sig_allocacmp_sum_7_6_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_6_load <= sum_7_6_fu_108;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_7_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_7_fu_112)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_6))) then 
            ap_sig_allocacmp_sum_7_7_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_7_load <= sum_7_7_fu_112;
        end if; 
    end process;


    ap_sig_allocacmp_sum_7_8_load_assign_proc : process(grp_fu_309_p2, ap_enable_reg_pp0_iter5, xor_ln11_reg_798_pp0_iter4_reg, ap_block_pp0_stage0, sum_7_8_fu_116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (xor_ln11_reg_798_pp0_iter4_reg = ap_const_lv3_7))) then 
            ap_sig_allocacmp_sum_7_8_load <= grp_fu_309_p2;
        else 
            ap_sig_allocacmp_sum_7_8_load <= sum_7_8_fu_116;
        end if; 
    end process;


    b_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, zext_ln11_fu_379_p1, ap_block_pp0_stage0, zext_ln26_fu_556_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            b_address0 <= zext_ln26_fu_556_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            b_address0 <= zext_ln11_fu_379_p1(10 - 1 downto 0);
        else 
            b_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    b_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln12_1_fu_349_p1 <= bound;
    bitcast_ln12_fu_455_p1 <= reg_343;
    bitcast_ln27_fu_608_p1 <= ap_phi_mux_sum_2_phi_fu_291_p4;
    flag_0_2_fu_499_p2 <= (grp_fu_313_p2 and and_ln12_fu_493_p2);
    flag_2_1_fu_652_p2 <= (grp_fu_313_p2 and and_ln27_fu_646_p2);
    flag_7_load_load_fu_553_p1 <= ap_sig_allocacmp_flag_7_load;

    grp_fu_313_p0_assign_proc : process(reg_343, ap_enable_reg_pp1_iter5, ap_enable_reg_pp0_iter6, ap_block_pp1_stage0, ap_phi_mux_sum_2_phi_fu_291_p4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            grp_fu_313_p0 <= ap_phi_mux_sum_2_phi_fu_291_p4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_313_p0 <= reg_343;
        else 
            grp_fu_313_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_318_p4 <= bitcast_ln12_1_reg_768(30 downto 23);
    grp_fu_327_p2 <= "0" when (grp_fu_318_p4 = ap_const_lv8_FF) else "1";
    i_1_fu_369_p2 <= std_logic_vector(unsigned(i_0_reg_200) + unsigned(ap_const_lv4_1));
    i_fu_562_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) + unsigned(i1_0_reg_211));
    icmp_ln12_1_fu_479_p2 <= "1" when (trunc_ln12_1_fu_469_p1 = ap_const_lv23_0) else "0";
    icmp_ln12_3_fu_357_p2 <= "1" when (trunc_ln12_fu_353_p1 = ap_const_lv23_0) else "0";
    icmp_ln12_fu_473_p2 <= "0" when (tmp_1_fu_459_p4 = ap_const_lv8_FF) else "1";
    icmp_ln27_1_fu_632_p2 <= "1" when (trunc_ln27_fu_622_p1 = ap_const_lv23_0) else "0";
    icmp_ln27_fu_626_p2 <= "0" when (tmp_5_fu_612_p4 = ap_const_lv8_FF) else "1";
    icmp_ln8_fu_363_p2 <= "1" when (i_0_reg_200 = ap_const_lv4_8) else "0";
    or_ln12_1_fu_489_p2 <= (icmp_ln12_3_reg_773 or icmp_ln12_2_reg_852);
    or_ln12_fu_485_p2 <= (icmp_ln12_reg_842 or icmp_ln12_1_reg_847);
    or_ln27_1_fu_642_p2 <= (icmp_ln27_2_reg_875_pp1_iter5_reg or icmp_ln12_3_reg_773);
    or_ln27_fu_638_p2 <= (icmp_ln27_reg_885 or icmp_ln27_1_reg_890);
    tmp_1_fu_459_p4 <= bitcast_ln12_fu_455_p1(30 downto 23);
    tmp_5_fu_612_p4 <= bitcast_ln27_fu_608_p1(30 downto 23);
    tmp_8_fu_545_p3 <= i1_0_reg_211(10 downto 10);
    trunc_ln10_fu_375_p1 <= i_0_reg_200(3 - 1 downto 0);
    trunc_ln12_1_fu_469_p1 <= bitcast_ln12_fu_455_p1(23 - 1 downto 0);
    trunc_ln12_fu_353_p1 <= bitcast_ln12_1_fu_349_p1(23 - 1 downto 0);
    trunc_ln27_fu_622_p1 <= bitcast_ln27_fu_608_p1(23 - 1 downto 0);
    xor_ln11_fu_385_p2 <= (trunc_ln10_fu_375_p1 xor ap_const_lv3_7);
    zext_ln11_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_200),64));
    zext_ln26_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_reg_211),64));
end behav;
