// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel5,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.717000,HLS_SYN_LAT=531,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=1499,HLS_SYN_LUT=1008,HLS_VERSION=2019_2}" *)

module kernel5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bound,
        a_address0,
        a_ce0,
        a_q0,
        b_address0,
        b_ce0,
        b_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state10 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state18 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] bound;
output  [9:0] a_address0;
output   a_ce0;
input  [31:0] a_q0;
output  [9:0] b_address0;
output   b_ce0;
input  [31:0] b_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] a_address0;
reg a_ce0;
reg[9:0] b_address0;
reg b_ce0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] i_0_reg_200;
reg   [10:0] i1_0_reg_211;
reg   [31:0] sum_7_2_6_reg_222;
reg   [31:0] sum_7_reg_232;
reg   [31:0] sum_6_1_reg_243;
reg   [31:0] sum_5_reg_254;
reg   [31:0] sum_4_reg_265;
reg   [31:0] sum_3_reg_276;
reg   [31:0] sum_2_reg_287;
reg   [31:0] sum_1_reg_298;
reg   [31:0] reg_333;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln8_reg_779;
wire    ap_block_state11_pp1_stage0_iter0;
wire    ap_block_state12_pp1_stage0_iter1;
wire    ap_block_state13_pp1_stage0_iter2;
wire    ap_block_state14_pp1_stage0_iter3;
wire    ap_block_state15_pp1_stage0_iter4;
wire    ap_block_state16_pp1_stage0_iter5;
wire    ap_block_state17_pp1_stage0_iter6;
wire    ap_block_pp1_stage0_11001;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] tmp_8_reg_857;
reg   [0:0] flag_7_load_reg_861;
reg   [31:0] reg_338;
wire   [31:0] grp_fu_309_p2;
reg   [31:0] reg_343;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp1_iter5;
reg   [0:0] tmp_8_reg_857_pp1_iter4_reg;
reg   [0:0] flag_7_load_reg_861_pp1_iter4_reg;
wire   [31:0] bitcast_ln12_1_fu_349_p1;
reg   [31:0] bitcast_ln12_1_reg_768;
wire   [0:0] icmp_ln12_3_fu_357_p2;
reg   [0:0] icmp_ln12_3_reg_773;
wire   [0:0] icmp_ln8_fu_363_p2;
wire   [3:0] i_1_fu_369_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] xor_ln11_fu_385_p2;
reg   [2:0] xor_ln11_reg_798;
reg   [2:0] xor_ln11_reg_798_pp0_iter1_reg;
reg   [2:0] xor_ln11_reg_798_pp0_iter2_reg;
reg   [2:0] xor_ln11_reg_798_pp0_iter3_reg;
reg   [2:0] xor_ln11_reg_798_pp0_iter4_reg;
reg   [2:0] xor_ln11_reg_798_pp0_iter5_reg;
reg   [2:0] xor_ln11_reg_798_pp0_iter6_reg;
reg   [31:0] sum_7_1_load_reg_802;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] sum_7_2_load_reg_807;
reg   [31:0] sum_7_3_load_reg_812;
reg   [31:0] sum_7_4_load_reg_817;
reg   [31:0] sum_7_5_load_reg_822;
reg   [31:0] sum_7_6_load_reg_827;
reg   [31:0] sum_7_7_load_reg_832;
reg   [31:0] sum_7_8_load_reg_837;
wire   [0:0] icmp_ln12_fu_473_p2;
reg   [0:0] icmp_ln12_reg_842;
wire   [0:0] icmp_ln12_1_fu_479_p2;
reg   [0:0] icmp_ln12_1_reg_847;
wire   [0:0] grp_fu_327_p2;
reg   [0:0] icmp_ln12_2_reg_852;
reg    ap_enable_reg_pp0_iter6;
wire   [0:0] tmp_8_fu_545_p3;
reg   [0:0] tmp_8_reg_857_pp1_iter1_reg;
reg   [0:0] tmp_8_reg_857_pp1_iter2_reg;
reg   [0:0] tmp_8_reg_857_pp1_iter3_reg;
reg   [0:0] tmp_8_reg_857_pp1_iter5_reg;
wire   [0:0] flag_7_load_load_fu_553_p1;
reg   [0:0] flag_7_load_reg_861_pp1_iter1_reg;
reg   [0:0] flag_7_load_reg_861_pp1_iter2_reg;
reg   [0:0] flag_7_load_reg_861_pp1_iter3_reg;
reg   [0:0] flag_7_load_reg_861_pp1_iter5_reg;
reg   [0:0] icmp_ln27_2_reg_875;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] icmp_ln27_2_reg_875_pp1_iter1_reg;
reg   [0:0] icmp_ln27_2_reg_875_pp1_iter2_reg;
reg   [0:0] icmp_ln27_2_reg_875_pp1_iter3_reg;
reg   [0:0] icmp_ln27_2_reg_875_pp1_iter4_reg;
reg   [0:0] icmp_ln27_2_reg_875_pp1_iter5_reg;
wire   [10:0] i_fu_562_p2;
wire   [0:0] icmp_ln27_fu_626_p2;
reg   [0:0] icmp_ln27_reg_885;
wire   [0:0] icmp_ln27_1_fu_632_p2;
reg   [0:0] icmp_ln27_1_reg_890;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter4_state6;
reg    ap_enable_reg_pp0_iter7;
wire    ap_CS_fsm_state10;
wire    ap_block_pp1_stage0_subdone;
reg    ap_predicate_tran16to18_state11;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_condition_pp1_exit_iter5_state16;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_pp1_stage0;
reg   [31:0] ap_phi_mux_sum_2_phi_fu_291_p4;
wire   [63:0] zext_ln11_fu_379_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln26_fu_556_p1;
reg   [31:0] sum_7_1_fu_88;
reg   [31:0] ap_sig_allocacmp_sum_7_1_load;
reg   [31:0] sum_7_2_fu_92;
reg   [31:0] ap_sig_allocacmp_sum_7_2_load;
reg   [31:0] sum_7_3_fu_96;
reg   [31:0] ap_sig_allocacmp_sum_7_3_load;
reg   [31:0] sum_7_4_fu_100;
reg   [31:0] ap_sig_allocacmp_sum_7_4_load;
reg   [31:0] sum_7_5_fu_104;
reg   [31:0] ap_sig_allocacmp_sum_7_5_load;
reg   [31:0] sum_7_6_fu_108;
reg   [31:0] ap_sig_allocacmp_sum_7_6_load;
reg   [31:0] sum_7_7_fu_112;
reg   [31:0] ap_sig_allocacmp_sum_7_7_load;
reg   [31:0] sum_7_8_fu_116;
reg   [31:0] ap_sig_allocacmp_sum_7_8_load;
wire   [0:0] flag_0_2_fu_499_p2;
reg   [0:0] flag_2_fu_128;
wire   [0:0] flag_2_1_fu_652_p2;
reg   [0:0] ap_sig_allocacmp_flag_3_1;
reg   [0:0] flag_3_fu_132;
reg   [0:0] ap_sig_allocacmp_flag_4_1;
reg   [0:0] flag_4_fu_136;
reg   [0:0] ap_sig_allocacmp_flag_5_1;
reg   [0:0] flag_5_fu_140;
reg   [0:0] ap_sig_allocacmp_flag_6_1;
reg   [0:0] flag_6_fu_144;
reg   [0:0] ap_sig_allocacmp_flag_7_1;
reg   [0:0] flag_7_fu_148;
reg   [0:0] ap_sig_allocacmp_flag_7_load;
reg   [31:0] grp_fu_313_p0;
wire   [7:0] grp_fu_318_p4;
wire   [22:0] trunc_ln12_fu_353_p1;
wire   [2:0] trunc_ln10_fu_375_p1;
wire   [31:0] bitcast_ln12_fu_455_p1;
wire   [7:0] tmp_1_fu_459_p4;
wire   [22:0] trunc_ln12_1_fu_469_p1;
wire   [0:0] or_ln12_fu_485_p2;
wire   [0:0] or_ln12_1_fu_489_p2;
wire   [0:0] and_ln12_fu_493_p2;
wire   [0:0] grp_fu_313_p2;
wire   [31:0] bitcast_ln27_fu_608_p1;
wire   [7:0] tmp_5_fu_612_p4;
wire   [22:0] trunc_ln27_fu_622_p1;
wire   [0:0] or_ln27_fu_638_p2;
wire   [0:0] or_ln27_1_fu_642_p2;
wire   [0:0] and_ln27_fu_646_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp1_stage0_00001;
wire    ap_CS_fsm_state18;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
end

kernel5_fadd_32nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel5_fadd_32nsbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_333),
    .din1(reg_338),
    .ce(1'b1),
    .dout(grp_fu_309_p2)
);

kernel5_fcmp_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
kernel5_fcmp_32nscud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_313_p0),
    .din1(bound),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_313_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_363_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter4_state6)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_predicate_tran16to18_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end else if (((1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter5_state16)))) begin
            ap_enable_reg_pp1_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter5_state16))) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter4;
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        flag_2_fu_128 <= flag_2_1_fu_652_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (xor_ln11_reg_798_pp0_iter6_reg == 3'd2))) begin
        flag_2_fu_128 <= flag_0_2_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter4_reg == 1'd0) & (tmp_8_reg_857_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        flag_3_fu_132 <= ap_sig_allocacmp_flag_3_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (xor_ln11_reg_798_pp0_iter6_reg == 3'd3))) begin
        flag_3_fu_132 <= flag_0_2_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter3_reg == 1'd0) & (tmp_8_reg_857_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        flag_4_fu_136 <= ap_sig_allocacmp_flag_4_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (xor_ln11_reg_798_pp0_iter6_reg == 3'd4))) begin
        flag_4_fu_136 <= flag_0_2_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter2_reg == 1'd0) & (tmp_8_reg_857_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        flag_5_fu_140 <= ap_sig_allocacmp_flag_5_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (xor_ln11_reg_798_pp0_iter6_reg == 3'd5))) begin
        flag_5_fu_140 <= flag_0_2_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter1_reg == 1'd0) & (tmp_8_reg_857_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        flag_6_fu_144 <= ap_sig_allocacmp_flag_6_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (xor_ln11_reg_798_pp0_iter6_reg == 3'd6))) begin
        flag_6_fu_144 <= flag_0_2_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861 == 1'd0) & (tmp_8_reg_857 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        flag_7_fu_148 <= ap_sig_allocacmp_flag_7_1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (xor_ln11_reg_798_pp0_iter6_reg == 3'd7))) begin
        flag_7_fu_148 <= flag_0_2_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i1_0_reg_211 <= 11'd8;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_load_fu_553_p1 == 1'd0) & (tmp_8_fu_545_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i1_0_reg_211 <= i_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_363_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_0_reg_200 <= i_1_fu_369_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_200 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_1_reg_298 <= sum_7_1_load_reg_802;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_1_reg_298 <= reg_343;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_2_reg_287 <= sum_7_2_load_reg_807;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_2_reg_287 <= sum_1_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_3_reg_276 <= sum_7_3_load_reg_812;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_3_reg_276 <= sum_2_reg_287;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_4_reg_265 <= sum_7_4_load_reg_817;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_4_reg_265 <= sum_3_reg_276;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_5_reg_254 <= sum_7_5_load_reg_822;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_5_reg_254 <= sum_4_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_6_1_reg_243 <= sum_7_6_load_reg_827;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_6_1_reg_243 <= sum_5_reg_254;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_7_2_6_reg_222 <= sum_7_8_load_reg_837;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_7_2_6_reg_222 <= sum_7_reg_232;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_7_reg_232 <= sum_7_7_load_reg_832;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        sum_7_reg_232 <= sum_6_1_reg_243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bitcast_ln12_1_reg_768 <= bitcast_ln12_1_fu_349_p1;
        icmp_ln12_3_reg_773 <= icmp_ln12_3_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_8_fu_545_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        flag_7_load_reg_861 <= ap_sig_allocacmp_flag_7_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        flag_7_load_reg_861_pp1_iter1_reg <= flag_7_load_reg_861;
        icmp_ln27_2_reg_875_pp1_iter1_reg <= icmp_ln27_2_reg_875;
        tmp_8_reg_857 <= i1_0_reg_211[32'd10];
        tmp_8_reg_857_pp1_iter1_reg <= tmp_8_reg_857;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        flag_7_load_reg_861_pp1_iter2_reg <= flag_7_load_reg_861_pp1_iter1_reg;
        flag_7_load_reg_861_pp1_iter3_reg <= flag_7_load_reg_861_pp1_iter2_reg;
        flag_7_load_reg_861_pp1_iter4_reg <= flag_7_load_reg_861_pp1_iter3_reg;
        flag_7_load_reg_861_pp1_iter5_reg <= flag_7_load_reg_861_pp1_iter4_reg;
        icmp_ln27_2_reg_875_pp1_iter2_reg <= icmp_ln27_2_reg_875_pp1_iter1_reg;
        icmp_ln27_2_reg_875_pp1_iter3_reg <= icmp_ln27_2_reg_875_pp1_iter2_reg;
        icmp_ln27_2_reg_875_pp1_iter4_reg <= icmp_ln27_2_reg_875_pp1_iter3_reg;
        icmp_ln27_2_reg_875_pp1_iter5_reg <= icmp_ln27_2_reg_875_pp1_iter4_reg;
        tmp_8_reg_857_pp1_iter2_reg <= tmp_8_reg_857_pp1_iter1_reg;
        tmp_8_reg_857_pp1_iter3_reg <= tmp_8_reg_857_pp1_iter2_reg;
        tmp_8_reg_857_pp1_iter4_reg <= tmp_8_reg_857_pp1_iter3_reg;
        tmp_8_reg_857_pp1_iter5_reg <= tmp_8_reg_857_pp1_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln12_1_reg_847 <= icmp_ln12_1_fu_479_p2;
        icmp_ln12_reg_842 <= icmp_ln12_fu_473_p2;
        xor_ln11_reg_798_pp0_iter2_reg <= xor_ln11_reg_798_pp0_iter1_reg;
        xor_ln11_reg_798_pp0_iter3_reg <= xor_ln11_reg_798_pp0_iter2_reg;
        xor_ln11_reg_798_pp0_iter4_reg <= xor_ln11_reg_798_pp0_iter3_reg;
        xor_ln11_reg_798_pp0_iter5_reg <= xor_ln11_reg_798_pp0_iter4_reg;
        xor_ln11_reg_798_pp0_iter6_reg <= xor_ln11_reg_798_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        icmp_ln12_2_reg_852 <= grp_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter4_reg == 1'd0) & (tmp_8_reg_857_pp1_iter4_reg == 1'd0))) begin
        icmp_ln27_1_reg_890 <= icmp_ln27_1_fu_632_p2;
        icmp_ln27_reg_885 <= icmp_ln27_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_load_fu_553_p1 == 1'd0) & (tmp_8_fu_545_p3 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln27_2_reg_875 <= grp_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln8_reg_779 <= icmp_ln8_fu_363_p2;
        xor_ln11_reg_798_pp0_iter1_reg <= xor_ln11_reg_798;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861 == 1'd0) & (tmp_8_reg_857 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln8_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_333 <= a_q0;
        reg_338 <= b_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (flag_7_load_reg_861_pp1_iter4_reg == 1'd0) & (tmp_8_reg_857_pp1_iter4_reg == 1'd0) & (ap_enable_reg_pp1_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        reg_343 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd0))) begin
        sum_7_1_fu_88 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        sum_7_1_load_reg_802 <= ap_sig_allocacmp_sum_7_1_load;
        sum_7_2_load_reg_807 <= ap_sig_allocacmp_sum_7_2_load;
        sum_7_3_load_reg_812 <= ap_sig_allocacmp_sum_7_3_load;
        sum_7_4_load_reg_817 <= ap_sig_allocacmp_sum_7_4_load;
        sum_7_5_load_reg_822 <= ap_sig_allocacmp_sum_7_5_load;
        sum_7_6_load_reg_827 <= ap_sig_allocacmp_sum_7_6_load;
        sum_7_7_load_reg_832 <= ap_sig_allocacmp_sum_7_7_load;
        sum_7_8_load_reg_837 <= ap_sig_allocacmp_sum_7_8_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd1))) begin
        sum_7_2_fu_92 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd2))) begin
        sum_7_3_fu_96 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd3))) begin
        sum_7_4_fu_100 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd4))) begin
        sum_7_5_fu_104 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd5))) begin
        sum_7_6_fu_108 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd6))) begin
        sum_7_7_fu_112 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd7))) begin
        sum_7_8_fu_116 <= grp_fu_309_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_363_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        xor_ln11_reg_798 <= xor_ln11_fu_385_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        a_address0 = zext_ln26_fu_556_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        a_address0 = zext_ln11_fu_379_p1;
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_condition_pp0_exit_iter4_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter4_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_condition_pp1_exit_iter5_state16 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter5_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        ap_phi_mux_sum_2_phi_fu_291_p4 = sum_1_reg_298;
    end else begin
        ap_phi_mux_sum_2_phi_fu_291_p4 = sum_2_reg_287;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((flag_7_load_reg_861_pp1_iter5_reg == 1'd0) & (tmp_8_reg_857_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        ap_sig_allocacmp_flag_3_1 = flag_2_1_fu_652_p2;
    end else begin
        ap_sig_allocacmp_flag_3_1 = flag_2_fu_128;
    end
end

always @ (*) begin
    if (((flag_7_load_reg_861_pp1_iter4_reg == 1'd0) & (tmp_8_reg_857_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_sig_allocacmp_flag_4_1 = ap_sig_allocacmp_flag_3_1;
    end else begin
        ap_sig_allocacmp_flag_4_1 = flag_3_fu_132;
    end
end

always @ (*) begin
    if (((flag_7_load_reg_861_pp1_iter3_reg == 1'd0) & (tmp_8_reg_857_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_sig_allocacmp_flag_5_1 = ap_sig_allocacmp_flag_4_1;
    end else begin
        ap_sig_allocacmp_flag_5_1 = flag_4_fu_136;
    end
end

always @ (*) begin
    if (((flag_7_load_reg_861_pp1_iter2_reg == 1'd0) & (tmp_8_reg_857_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_sig_allocacmp_flag_6_1 = ap_sig_allocacmp_flag_5_1;
    end else begin
        ap_sig_allocacmp_flag_6_1 = flag_5_fu_140;
    end
end

always @ (*) begin
    if (((flag_7_load_reg_861_pp1_iter1_reg == 1'd0) & (tmp_8_reg_857_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_sig_allocacmp_flag_7_1 = ap_sig_allocacmp_flag_6_1;
    end else begin
        ap_sig_allocacmp_flag_7_1 = flag_6_fu_144;
    end
end

always @ (*) begin
    if (((flag_7_load_reg_861 == 1'd0) & (tmp_8_reg_857 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_sig_allocacmp_flag_7_load = ap_sig_allocacmp_flag_7_1;
    end else begin
        ap_sig_allocacmp_flag_7_load = flag_7_fu_148;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd0))) begin
        ap_sig_allocacmp_sum_7_1_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_1_load = sum_7_1_fu_88;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd1))) begin
        ap_sig_allocacmp_sum_7_2_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_2_load = sum_7_2_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd2))) begin
        ap_sig_allocacmp_sum_7_3_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_3_load = sum_7_3_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd3))) begin
        ap_sig_allocacmp_sum_7_4_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_4_load = sum_7_4_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd4))) begin
        ap_sig_allocacmp_sum_7_5_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_5_load = sum_7_5_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd5))) begin
        ap_sig_allocacmp_sum_7_6_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_6_load = sum_7_6_fu_108;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd6))) begin
        ap_sig_allocacmp_sum_7_7_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_7_load = sum_7_7_fu_112;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (xor_ln11_reg_798_pp0_iter4_reg == 3'd7))) begin
        ap_sig_allocacmp_sum_7_8_load = grp_fu_309_p2;
    end else begin
        ap_sig_allocacmp_sum_7_8_load = sum_7_8_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        b_address0 = zext_ln26_fu_556_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        b_address0 = zext_ln11_fu_379_p1;
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        grp_fu_313_p0 = ap_phi_mux_sum_2_phi_fu_291_p4;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_313_p0 = reg_343;
    end else begin
        grp_fu_313_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (ap_enable_reg_pp0_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter4 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln12_fu_493_p2 = (or_ln12_fu_485_p2 & or_ln12_1_fu_489_p2);

assign and_ln27_fu_646_p2 = (or_ln27_fu_638_p2 & or_ln27_1_fu_642_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran16to18_state11 = ((ap_sig_allocacmp_flag_7_load == 1'd1) | (tmp_8_fu_545_p3 == 1'd1));
end

assign ap_return = sum_7_2_6_reg_222;

assign bitcast_ln12_1_fu_349_p1 = bound;

assign bitcast_ln12_fu_455_p1 = reg_343;

assign bitcast_ln27_fu_608_p1 = ap_phi_mux_sum_2_phi_fu_291_p4;

assign flag_0_2_fu_499_p2 = (grp_fu_313_p2 & and_ln12_fu_493_p2);

assign flag_2_1_fu_652_p2 = (grp_fu_313_p2 & and_ln27_fu_646_p2);

assign flag_7_load_load_fu_553_p1 = ap_sig_allocacmp_flag_7_load;

assign grp_fu_318_p4 = {{bitcast_ln12_1_reg_768[30:23]}};

assign grp_fu_327_p2 = ((grp_fu_318_p4 != 8'd255) ? 1'b1 : 1'b0);

assign i_1_fu_369_p2 = (i_0_reg_200 + 4'd1);

assign i_fu_562_p2 = (11'd1 + i1_0_reg_211);

assign icmp_ln12_1_fu_479_p2 = ((trunc_ln12_1_fu_469_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln12_3_fu_357_p2 = ((trunc_ln12_fu_353_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_473_p2 = ((tmp_1_fu_459_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_1_fu_632_p2 = ((trunc_ln27_fu_622_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_626_p2 = ((tmp_5_fu_612_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_363_p2 = ((i_0_reg_200 == 4'd8) ? 1'b1 : 1'b0);

assign or_ln12_1_fu_489_p2 = (icmp_ln12_3_reg_773 | icmp_ln12_2_reg_852);

assign or_ln12_fu_485_p2 = (icmp_ln12_reg_842 | icmp_ln12_1_reg_847);

assign or_ln27_1_fu_642_p2 = (icmp_ln27_2_reg_875_pp1_iter5_reg | icmp_ln12_3_reg_773);

assign or_ln27_fu_638_p2 = (icmp_ln27_reg_885 | icmp_ln27_1_reg_890);

assign tmp_1_fu_459_p4 = {{bitcast_ln12_fu_455_p1[30:23]}};

assign tmp_5_fu_612_p4 = {{bitcast_ln27_fu_608_p1[30:23]}};

assign tmp_8_fu_545_p3 = i1_0_reg_211[32'd10];

assign trunc_ln10_fu_375_p1 = i_0_reg_200[2:0];

assign trunc_ln12_1_fu_469_p1 = bitcast_ln12_fu_455_p1[22:0];

assign trunc_ln12_fu_353_p1 = bitcast_ln12_1_fu_349_p1[22:0];

assign trunc_ln27_fu_622_p1 = bitcast_ln27_fu_608_p1[22:0];

assign xor_ln11_fu_385_p2 = (trunc_ln10_fu_375_p1 ^ 3'd7);

assign zext_ln11_fu_379_p1 = i_0_reg_200;

assign zext_ln26_fu_556_p1 = i1_0_reg_211;

endmodule //kernel5
