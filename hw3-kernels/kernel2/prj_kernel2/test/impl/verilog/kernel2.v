// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kernel2,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.580000,HLS_SYN_LAT=4099,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=7,HLS_SYN_FF=2051,HLS_SYN_LUT=1373,HLS_VERSION=2019_2}" *)

module kernel2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        array_0_address0,
        array_0_ce0,
        array_0_we0,
        array_0_d0,
        array_0_q0,
        array_0_address1,
        array_0_ce1,
        array_0_q1,
        array_1_address0,
        array_1_ce0,
        array_1_we0,
        array_1_d0,
        array_1_q0,
        array_1_address1,
        array_1_ce1,
        array_1_q1,
        array_2_address0,
        array_2_ce0,
        array_2_we0,
        array_2_d0,
        array_2_q0,
        array_2_address1,
        array_2_ce1,
        array_2_q1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state20 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] array_0_address0;
output   array_0_ce0;
output   array_0_we0;
output  [31:0] array_0_d0;
input  [31:0] array_0_q0;
output  [8:0] array_0_address1;
output   array_0_ce1;
input  [31:0] array_0_q1;
output  [8:0] array_1_address0;
output   array_1_ce0;
output   array_1_we0;
output  [31:0] array_1_d0;
input  [31:0] array_1_q0;
output  [8:0] array_1_address1;
output   array_1_ce1;
input  [31:0] array_1_q1;
output  [8:0] array_2_address0;
output   array_2_ce0;
output   array_2_we0;
output  [31:0] array_2_d0;
input  [31:0] array_2_q0;
output  [8:0] array_2_address1;
output   array_2_ce1;
input  [31:0] array_2_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] array_0_address0;
reg array_0_ce0;
reg array_0_we0;
reg[8:0] array_0_address1;
reg array_0_ce1;
reg[8:0] array_1_address0;
reg array_1_ce0;
reg array_1_we0;
reg[8:0] array_1_address1;
reg array_1_ce1;
reg[8:0] array_2_address0;
reg array_2_ce0;
reg array_2_we0;
reg[8:0] array_2_address1;
reg array_2_ce1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] i_0_reg_193;
reg   [10:0] i_0_reg_193_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state18_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [10:0] i_0_reg_193_pp0_iter2_reg;
reg   [10:0] i_0_reg_193_pp0_iter3_reg;
wire   [0:0] icmp_ln6_fu_238_p2;
reg   [0:0] icmp_ln6_reg_425;
reg   [0:0] icmp_ln6_reg_425_pp0_iter1_reg;
reg   [0:0] icmp_ln6_reg_425_pp0_iter2_reg;
reg   [0:0] icmp_ln6_reg_425_pp0_iter3_reg;
wire   [9:0] trunc_ln7_fu_244_p1;
reg   [9:0] trunc_ln7_reg_429;
wire   [9:0] add_ln7_1_fu_248_p2;
reg   [9:0] add_ln7_1_reg_435;
reg   [9:0] add_ln7_1_reg_435_pp0_iter1_reg;
reg   [9:0] add_ln7_1_reg_435_pp0_iter2_reg;
wire   [9:0] add_ln7_2_fu_260_p2;
reg   [9:0] add_ln7_2_reg_441;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_state15_pp0_stage1_iter3;
wire    ap_block_state19_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [9:0] add_ln7_2_reg_441_pp0_iter1_reg;
reg   [9:0] add_ln7_2_reg_441_pp0_iter2_reg;
wire   [9:0] add_ln7_fu_271_p2;
reg   [9:0] add_ln7_reg_447;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state12_pp0_stage2_iter2;
wire    ap_block_state16_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg   [9:0] add_ln7_reg_447_pp0_iter1_reg;
reg   [9:0] add_ln7_reg_447_pp0_iter2_reg;
wire   [10:0] i_fu_288_p2;
reg   [10:0] i_reg_453;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state13_pp0_stage3_iter2;
wire    ap_block_state17_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
reg   [9:0] udiv_ln7_1_reg_458;
wire   [2:0] trunc_ln7_2_fu_306_p1;
reg   [2:0] trunc_ln7_2_reg_463;
reg   [9:0] udiv_ln7_2_reg_467;
reg   [9:0] udiv_ln7_reg_472;
wire   [2:0] trunc_ln7_3_fu_340_p1;
reg   [2:0] trunc_ln7_3_reg_492;
wire   [2:0] trunc_ln7_1_fu_350_p1;
reg   [2:0] trunc_ln7_1_reg_511;
reg    ap_enable_reg_pp0_iter3;
reg   [10:0] udiv_ln7_3_reg_560;
reg    ap_enable_reg_pp0_iter4;
wire   [31:0] mul_ln7_fu_373_p2;
reg   [31:0] mul_ln7_reg_580;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [10:0] ap_phi_mux_i_0_phi_fu_197_p4;
wire    ap_block_pp0_stage0;
wire  signed [31:0] ap_phi_reg_pp0_iter0_phi_ln7_1_reg_205;
reg  signed [31:0] ap_phi_reg_pp0_iter1_phi_ln7_1_reg_205;
reg  signed [31:0] ap_phi_reg_pp0_iter2_phi_ln7_1_reg_205;
reg  signed [31:0] ap_phi_reg_pp0_iter3_phi_ln7_1_reg_205;
reg  signed [31:0] ap_phi_reg_pp0_iter4_phi_ln7_1_reg_205;
wire  signed [31:0] ap_phi_reg_pp0_iter0_phi_ln7_2_reg_216;
reg  signed [31:0] ap_phi_reg_pp0_iter1_phi_ln7_2_reg_216;
reg  signed [31:0] ap_phi_reg_pp0_iter2_phi_ln7_2_reg_216;
reg  signed [31:0] ap_phi_reg_pp0_iter3_phi_ln7_2_reg_216;
reg  signed [31:0] ap_phi_reg_pp0_iter4_phi_ln7_2_reg_216;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln7_reg_227;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln7_reg_227;
reg   [31:0] ap_phi_reg_pp0_iter2_phi_ln7_reg_227;
reg   [31:0] ap_phi_reg_pp0_iter3_phi_ln7_reg_227;
reg   [31:0] ap_phi_reg_pp0_iter4_phi_ln7_reg_227;
wire   [63:0] zext_ln7_1_fu_334_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln7_2_fu_344_p1;
wire   [63:0] zext_ln7_fu_354_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln7_3_fu_391_p1;
wire    ap_block_pp0_stage1;
wire   [2:0] trunc_ln7_4_fu_387_p1;
wire   [31:0] add_ln7_3_fu_379_p2;
wire   [9:0] grp_fu_254_p0;
wire   [2:0] grp_fu_254_p1;
wire   [9:0] grp_fu_265_p0;
wire   [2:0] grp_fu_265_p1;
wire   [9:0] grp_fu_276_p0;
wire   [2:0] grp_fu_276_p1;
wire   [2:0] grp_fu_282_p1;
wire   [21:0] mul_ln7_2_fu_397_p2;
wire   [2:0] grp_fu_254_p2;
wire   [21:0] mul_ln7_3_fu_404_p2;
wire   [21:0] mul_ln7_1_fu_411_p2;
wire   [2:0] grp_fu_265_p2;
wire   [2:0] grp_fu_276_p2;
wire   [23:0] mul_ln7_4_fu_418_p2;
wire   [2:0] grp_fu_282_p2;
wire   [11:0] mul_ln7_2_fu_397_p0;
wire   [9:0] mul_ln7_2_fu_397_p1;
wire   [11:0] mul_ln7_3_fu_404_p0;
wire   [9:0] mul_ln7_3_fu_404_p1;
wire   [11:0] mul_ln7_1_fu_411_p0;
wire   [9:0] mul_ln7_1_fu_411_p1;
wire   [12:0] mul_ln7_4_fu_418_p0;
wire   [10:0] mul_ln7_4_fu_418_p1;
wire    ap_CS_fsm_state20;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] mul_ln7_1_fu_411_p10;
wire   [21:0] mul_ln7_2_fu_397_p10;
wire   [21:0] mul_ln7_3_fu_404_p10;
wire   [23:0] mul_ln7_4_fu_418_p10;
reg    ap_condition_220;
reg    ap_condition_206;
reg    ap_condition_234;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

kernel2_urem_10nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
kernel2_urem_10nsbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_254_p0),
    .din1(grp_fu_254_p1),
    .ce(1'b1),
    .dout(grp_fu_254_p2)
);

kernel2_urem_10nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
kernel2_urem_10nsbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_265_p0),
    .din1(grp_fu_265_p1),
    .ce(1'b1),
    .dout(grp_fu_265_p2)
);

kernel2_urem_10nsbkb #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
kernel2_urem_10nsbkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_276_p0),
    .din1(grp_fu_276_p1),
    .ce(1'b1),
    .dout(grp_fu_276_p2)
);

kernel2_urem_11nscud #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
kernel2_urem_11nscud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_0_reg_193),
    .din1(grp_fu_282_p1),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

kernel2_mul_mul_1dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
kernel2_mul_mul_1dEe_U5(
    .din0(mul_ln7_2_fu_397_p0),
    .din1(mul_ln7_2_fu_397_p1),
    .dout(mul_ln7_2_fu_397_p2)
);

kernel2_mul_mul_1dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
kernel2_mul_mul_1dEe_U6(
    .din0(mul_ln7_3_fu_404_p0),
    .din1(mul_ln7_3_fu_404_p1),
    .dout(mul_ln7_3_fu_404_p2)
);

kernel2_mul_mul_1dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 22 ))
kernel2_mul_mul_1dEe_U7(
    .din0(mul_ln7_1_fu_411_p0),
    .din1(mul_ln7_1_fu_411_p1),
    .dout(mul_ln7_1_fu_411_p2)
);

kernel2_mul_mul_1eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 24 ))
kernel2_mul_mul_1eOg_U8(
    .din0(mul_ln7_4_fu_418_p0),
    .din1(mul_ln7_4_fu_418_p1),
    .dout(mul_ln7_4_fu_418_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_206)) begin
        if ((1'b1 == ap_condition_220)) begin
            ap_phi_reg_pp0_iter4_phi_ln7_1_reg_205 <= array_2_q0;
        end else if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (trunc_ln7_2_reg_463 == 3'd1))) begin
            ap_phi_reg_pp0_iter4_phi_ln7_1_reg_205 <= array_1_q0;
        end else if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (trunc_ln7_2_reg_463 == 3'd0))) begin
            ap_phi_reg_pp0_iter4_phi_ln7_1_reg_205 <= array_0_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_phi_ln7_1_reg_205 <= ap_phi_reg_pp0_iter3_phi_ln7_1_reg_205;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_206)) begin
        if ((1'b1 == ap_condition_234)) begin
            ap_phi_reg_pp0_iter4_phi_ln7_2_reg_216 <= array_2_q1;
        end else if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (trunc_ln7_3_reg_492 == 3'd1))) begin
            ap_phi_reg_pp0_iter4_phi_ln7_2_reg_216 <= array_1_q1;
        end else if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (trunc_ln7_3_reg_492 == 3'd0))) begin
            ap_phi_reg_pp0_iter4_phi_ln7_2_reg_216 <= array_0_q1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_phi_ln7_2_reg_216 <= ap_phi_reg_pp0_iter3_phi_ln7_2_reg_216;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(trunc_ln7_1_reg_511 == 3'd0) & ~(trunc_ln7_1_reg_511 == 3'd1) & (icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_phi_ln7_reg_227 <= array_2_q1;
    end else if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln7_1_reg_511 == 3'd1))) begin
        ap_phi_reg_pp0_iter4_phi_ln7_reg_227 <= array_1_q1;
    end else if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (trunc_ln7_1_reg_511 == 3'd0))) begin
        ap_phi_reg_pp0_iter4_phi_ln7_reg_227 <= array_0_q1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter4_phi_ln7_reg_227 <= ap_phi_reg_pp0_iter3_phi_ln7_reg_227;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_0_reg_193 <= i_reg_453;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_193 <= 11'd3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_fu_238_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln7_1_reg_435 <= add_ln7_1_fu_248_p2;
        trunc_ln7_reg_429 <= trunc_ln7_fu_244_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln7_1_reg_435_pp0_iter1_reg <= add_ln7_1_reg_435;
        add_ln7_1_reg_435_pp0_iter2_reg <= add_ln7_1_reg_435_pp0_iter1_reg;
        i_0_reg_193_pp0_iter1_reg <= i_0_reg_193;
        i_0_reg_193_pp0_iter2_reg <= i_0_reg_193_pp0_iter1_reg;
        i_0_reg_193_pp0_iter3_reg <= i_0_reg_193_pp0_iter2_reg;
        icmp_ln6_reg_425 <= icmp_ln6_fu_238_p2;
        icmp_ln6_reg_425_pp0_iter1_reg <= icmp_ln6_reg_425;
        icmp_ln6_reg_425_pp0_iter2_reg <= icmp_ln6_reg_425_pp0_iter1_reg;
        icmp_ln6_reg_425_pp0_iter3_reg <= icmp_ln6_reg_425_pp0_iter2_reg;
        mul_ln7_reg_580 <= mul_ln7_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln7_2_reg_441 <= add_ln7_2_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln7_2_reg_441_pp0_iter1_reg <= add_ln7_2_reg_441;
        add_ln7_2_reg_441_pp0_iter2_reg <= add_ln7_2_reg_441_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln7_reg_447 <= add_ln7_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln7_reg_447_pp0_iter1_reg <= add_ln7_reg_447;
        add_ln7_reg_447_pp0_iter2_reg <= add_ln7_reg_447_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter1_phi_ln7_1_reg_205 <= ap_phi_reg_pp0_iter0_phi_ln7_1_reg_205;
        ap_phi_reg_pp0_iter1_phi_ln7_2_reg_216 <= ap_phi_reg_pp0_iter0_phi_ln7_2_reg_216;
        ap_phi_reg_pp0_iter1_phi_ln7_reg_227 <= ap_phi_reg_pp0_iter0_phi_ln7_reg_227;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter2_phi_ln7_1_reg_205 <= ap_phi_reg_pp0_iter1_phi_ln7_1_reg_205;
        ap_phi_reg_pp0_iter2_phi_ln7_2_reg_216 <= ap_phi_reg_pp0_iter1_phi_ln7_2_reg_216;
        ap_phi_reg_pp0_iter2_phi_ln7_reg_227 <= ap_phi_reg_pp0_iter1_phi_ln7_reg_227;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_phi_reg_pp0_iter3_phi_ln7_1_reg_205 <= ap_phi_reg_pp0_iter2_phi_ln7_1_reg_205;
        ap_phi_reg_pp0_iter3_phi_ln7_2_reg_216 <= ap_phi_reg_pp0_iter2_phi_ln7_2_reg_216;
        ap_phi_reg_pp0_iter3_phi_ln7_reg_227 <= ap_phi_reg_pp0_iter2_phi_ln7_reg_227;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        i_reg_453 <= i_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        trunc_ln7_1_reg_511 <= trunc_ln7_1_fu_350_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        trunc_ln7_2_reg_463 <= trunc_ln7_2_fu_306_p1;
        udiv_ln7_2_reg_467 <= {{mul_ln7_3_fu_404_p2[21:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        trunc_ln7_3_reg_492 <= trunc_ln7_3_fu_340_p1;
        udiv_ln7_reg_472 <= {{mul_ln7_1_fu_411_p2[21:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_425_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        udiv_ln7_1_reg_458 <= {{mul_ln7_2_fu_397_p2[21:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        udiv_ln7_3_reg_560 <= {{mul_ln7_4_fu_418_p2[23:13]}};
    end
end

always @ (*) begin
    if ((icmp_ln6_fu_238_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_425 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_0_phi_fu_197_p4 = i_reg_453;
    end else begin
        ap_phi_mux_i_0_phi_fu_197_p4 = i_0_reg_193;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        array_0_address0 = zext_ln7_3_fu_391_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        array_0_address0 = zext_ln7_1_fu_334_p1;
    end else begin
        array_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            array_0_address1 = zext_ln7_fu_354_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            array_0_address1 = zext_ln7_2_fu_344_p1;
        end else begin
            array_0_address1 = 'bx;
        end
    end else begin
        array_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        array_0_ce0 = 1'b1;
    end else begin
        array_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        array_0_ce1 = 1'b1;
    end else begin
        array_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln7_4_fu_387_p1 == 3'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        array_0_we0 = 1'b1;
    end else begin
        array_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        array_1_address0 = zext_ln7_3_fu_391_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        array_1_address0 = zext_ln7_1_fu_334_p1;
    end else begin
        array_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            array_1_address1 = zext_ln7_fu_354_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            array_1_address1 = zext_ln7_2_fu_344_p1;
        end else begin
            array_1_address1 = 'bx;
        end
    end else begin
        array_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        array_1_ce0 = 1'b1;
    end else begin
        array_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        array_1_ce1 = 1'b1;
    end else begin
        array_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln7_4_fu_387_p1 == 3'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        array_1_we0 = 1'b1;
    end else begin
        array_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        array_2_address0 = zext_ln7_3_fu_391_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        array_2_address0 = zext_ln7_1_fu_334_p1;
    end else begin
        array_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            array_2_address1 = zext_ln7_fu_354_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            array_2_address1 = zext_ln7_2_fu_344_p1;
        end else begin
            array_2_address1 = 'bx;
        end
    end else begin
        array_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        array_2_ce0 = 1'b1;
    end else begin
        array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        array_2_ce1 = 1'b1;
    end else begin
        array_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln7_4_fu_387_p1 == 3'd0) & ~(trunc_ln7_4_fu_387_p1 == 3'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        array_2_we0 = 1'b1;
    end else begin
        array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln6_fu_238_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln6_fu_238_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln7_1_fu_248_p2 = ($signed(10'd1022) + $signed(trunc_ln7_fu_244_p1));

assign add_ln7_2_fu_260_p2 = ($signed(10'd1021) + $signed(trunc_ln7_reg_429));

assign add_ln7_3_fu_379_p2 = (mul_ln7_reg_580 + ap_phi_reg_pp0_iter4_phi_ln7_reg_227);

assign add_ln7_fu_271_p2 = ($signed(10'd1023) + $signed(trunc_ln7_reg_429));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_206 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001));
end

always @ (*) begin
    ap_condition_220 = (~(trunc_ln7_2_reg_463 == 3'd0) & ~(trunc_ln7_2_reg_463 == 3'd1) & (icmp_ln6_reg_425_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_condition_234 = (~(trunc_ln7_3_reg_492 == 3'd0) & ~(trunc_ln7_3_reg_492 == 3'd1) & (icmp_ln6_reg_425_pp0_iter3_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_phi_ln7_1_reg_205 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln7_2_reg_216 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln7_reg_227 = 'bx;

assign array_0_d0 = add_ln7_3_fu_379_p2;

assign array_1_d0 = add_ln7_3_fu_379_p2;

assign array_2_d0 = add_ln7_3_fu_379_p2;

assign grp_fu_254_p0 = ($signed(10'd1022) + $signed(trunc_ln7_fu_244_p1));

assign grp_fu_254_p1 = 10'd3;

assign grp_fu_265_p0 = ($signed(10'd1021) + $signed(trunc_ln7_reg_429));

assign grp_fu_265_p1 = 10'd3;

assign grp_fu_276_p0 = ($signed(10'd1023) + $signed(trunc_ln7_reg_429));

assign grp_fu_276_p1 = 10'd3;

assign grp_fu_282_p1 = 11'd3;

assign i_fu_288_p2 = (i_0_reg_193 + 11'd1);

assign icmp_ln6_fu_238_p2 = ((ap_phi_mux_i_0_phi_fu_197_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign mul_ln7_1_fu_411_p0 = 22'd1366;

assign mul_ln7_1_fu_411_p1 = mul_ln7_1_fu_411_p10;

assign mul_ln7_1_fu_411_p10 = add_ln7_reg_447_pp0_iter2_reg;

assign mul_ln7_2_fu_397_p0 = 22'd1366;

assign mul_ln7_2_fu_397_p1 = mul_ln7_2_fu_397_p10;

assign mul_ln7_2_fu_397_p10 = add_ln7_1_reg_435_pp0_iter2_reg;

assign mul_ln7_3_fu_404_p0 = 22'd1366;

assign mul_ln7_3_fu_404_p1 = mul_ln7_3_fu_404_p10;

assign mul_ln7_3_fu_404_p10 = add_ln7_2_reg_441_pp0_iter2_reg;

assign mul_ln7_4_fu_418_p0 = 24'd2731;

assign mul_ln7_4_fu_418_p1 = mul_ln7_4_fu_418_p10;

assign mul_ln7_4_fu_418_p10 = i_0_reg_193_pp0_iter3_reg;

assign mul_ln7_fu_373_p2 = ($signed(ap_phi_reg_pp0_iter4_phi_ln7_2_reg_216) * $signed(ap_phi_reg_pp0_iter4_phi_ln7_1_reg_205));

assign trunc_ln7_1_fu_350_p1 = grp_fu_276_p2[2:0];

assign trunc_ln7_2_fu_306_p1 = grp_fu_254_p2[2:0];

assign trunc_ln7_3_fu_340_p1 = grp_fu_265_p2[2:0];

assign trunc_ln7_4_fu_387_p1 = grp_fu_282_p2[2:0];

assign trunc_ln7_fu_244_p1 = ap_phi_mux_i_0_phi_fu_197_p4[9:0];

assign zext_ln7_1_fu_334_p1 = udiv_ln7_1_reg_458;

assign zext_ln7_2_fu_344_p1 = udiv_ln7_2_reg_467;

assign zext_ln7_3_fu_391_p1 = udiv_ln7_3_reg_560;

assign zext_ln7_fu_354_p1 = udiv_ln7_reg_472;

endmodule //kernel2
